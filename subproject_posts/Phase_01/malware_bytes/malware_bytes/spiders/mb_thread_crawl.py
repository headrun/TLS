import scrapy
from scrapy.spider import Spider
from scrapy.selector import Selector
from scrapy.http import Request
import MySQLdb
from scrapy import signals
from scrapy.xlib.pydispatch import dispatcher
from scrapy.selector import Selector
import mb_xpaths
import re 
import sys
sys.path.append('/home/epictions/tls_scripts/tls_utils')
import tls_utils as utils
mb_crawl_que = utils.generate_upsert_query_posts_crawl('malwarebytes')


class formus(Spider):
    name="mb_threads_crawl"
    start_urls = ["https://forums.malwarebytes.com/forum/8-general/"]


    def __init__(self):
	self.conn,self.cursor = self.mysql_conn()
	dispatcher.connect(self.close_conn, signals.spider_closed)

    def mysql_conn(self):
        conn = MySQLdb.connect(db="posts",host="localhost",user="root",passwd="qwe123",use_unicode=True,charset="utf8")
        cursor = conn.cursor()
	return conn, cursor

    def close_conn(self, spider):
        self.conn.commit()
        self.conn.close()

    def parse(self,response):
        sel=Selector(response)
        nextpage = sel.xpath(mb_xpaths.nextpage_urls).extract()
        for nextpages in nextpage:
            yield Request(nextpages,callback=self.parse_generalnextpage)


    def parse_generalnextpage(self,response):
         sel=Selector(response)
         crawl_type = response.meta.get('crawl_type','')
         titlelinks = sel.xpath(mb_xpaths.title_urls).extract()
         for titlelink in titlelinks:
	     if '?page=' in titlelink:
		 continue
             sk = ''.join(re.findall('topic/\d+-',titlelink)).replace('topic/','').replace('-','')
	     val = {
		'sk':sk,
		'post_url':titlelink,
		'crawl_status':0,
		'reference_url':response.url}
             self.cursor.execute(mb_crawl_que,val)
	     self.conn.commit()
         post_url = response.xpath(mb_xpaths.post_urls).extract()
         for i in set(post_url):
            if i:
                yield Request(i,callback=self.parse_generalnextpage)

